'use strict'
Object.defineProperty(exports, '__esModule', { value: true })
const tslib_1 = require('tslib')
const core_1 = require('@rematch/core')
const operators_1 = require('rxjs/operators')
const src_1 = tslib_1.__importStar(require('../src'))
const utils_1 = require('./utils')
const sharkEpics = (action$, state$, { dispatchers }) => {
  return action$.pipe(
    src_1.ofType(dispatchers.dolphins.increment, dispatchers.dolphins.incrementAsync),
    operators_1.mapTo(dispatchers.sharks.increment(1)),
  )
}
const models = {
  sharks: utils_1.sharks,
  dolphins: utils_1.dolphins,
}
describe('rematch observable', () => {
  test('rematch observable listen normal dispatch', () => {
    const rematchObservable = src_1.default({ epics: { sharkEpics }, models })
    const store = core_1.init({
      models,
      plugins: [rematchObservable],
    })
    store.dispatch.dolphins.increment()
    expect(store.getState()).toEqual({
      sharks: 1,
      dolphins: 2,
    })
  })
  test('rematch observable listen effect dispatch', async () => {
    const rematchObservable = src_1.default({ epics: { sharkEpics }, models })
    const store = core_1.init({
      models,
      plugins: [rematchObservable],
    })
    store.dispatch.dolphins.incrementAsync()
    await utils_1.delay(1000)
    expect(store.getState()).toEqual({
      sharks: 1,
      dolphins: 2,
    })
  })
})
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL3FpZGFudGEvRG9jdW1lbnRzL3BlcnNvbmFsL3JlbWF0Y2gtb2JzZXJ2YWJsZS90ZXN0L3JlbWF0Y2gtb2JzZXJ2YWJsZS50ZXN0LnRzIiwibWFwcGluZ3MiOiI7OztBQUFBLHdDQUFvQztBQUNwQyw4Q0FBc0M7QUFDdEMsc0RBQXdEO0FBQ3hELG1DQUFpRDtBQUVqRCxNQUFNLFVBQVUsR0FBRyxDQUNqQixPQUFPLEVBQ1AsTUFBTSxFQUNOLEVBQUUsV0FBVyxFQUFFLEVBQ2YsRUFBRTtJQUNGLE9BQU8sT0FBTyxDQUFDLElBQUksQ0FDakIsWUFBTSxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsU0FBUyxFQUFFLFdBQVcsQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLEVBQzNFLGlCQUFLLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FDdkMsQ0FBQTtBQUNILENBQUMsQ0FBQTtBQUVELE1BQU0sTUFBTSxHQUFHO0lBQ2IsTUFBTSxFQUFOLGNBQU07SUFDTixRQUFRLEVBQVIsZ0JBQVE7Q0FDVCxDQUFBO0FBR0QsUUFBUSxDQUFDLG9CQUFvQixFQUFFLEdBQUcsRUFBRTtJQUNsQyxJQUFJLENBQUMsMkNBQTJDLEVBQUUsR0FBRyxFQUFFO1FBQ3JELE1BQU0saUJBQWlCLEdBQUcsYUFBdUIsQ0FBQyxFQUFFLEtBQUssRUFBRSxFQUFFLFVBQVUsRUFBRSxFQUFFLE1BQU0sRUFBRSxDQUFDLENBQUE7UUFDcEYsTUFBTSxLQUFLLEdBQUcsV0FBSSxDQUFDO1lBQ2pCLE1BQU07WUFDTixPQUFPLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQztTQUM3QixDQUFDLENBQUE7UUFDRixLQUFLLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxTQUFTLEVBQUUsQ0FBQTtRQUNuQyxNQUFNLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDO1lBQy9CLE1BQU0sRUFBRSxDQUFDO1lBQ1QsUUFBUSxFQUFFLENBQUM7U0FDWixDQUFDLENBQUE7SUFDSixDQUFDLENBQUMsQ0FBQTtJQUVGLElBQUksQ0FBQywyQ0FBMkMsRUFBRSxLQUFLLElBQUksRUFBRTtRQUMzRCxNQUFNLGlCQUFpQixHQUFHLGFBQXVCLENBQUMsRUFBRSxLQUFLLEVBQUUsRUFBRSxVQUFVLEVBQUUsRUFBRSxNQUFNLEVBQUUsQ0FBQyxDQUFBO1FBQ3BGLE1BQU0sS0FBSyxHQUFHLFdBQUksQ0FBQztZQUNqQixNQUFNO1lBQ04sT0FBTyxFQUFFLENBQUMsaUJBQWlCLENBQUM7U0FDN0IsQ0FBQyxDQUFBO1FBQ0YsS0FBSyxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsY0FBYyxFQUFFLENBQUE7UUFDeEMsTUFBTSxhQUFLLENBQUMsSUFBSSxDQUFDLENBQUE7UUFDakIsTUFBTSxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQztZQUMvQixNQUFNLEVBQUUsQ0FBQztZQUNULFFBQVEsRUFBRSxDQUFDO1NBQ1osQ0FBQyxDQUFBO0lBQ0osQ0FBQyxDQUFDLENBQUE7QUFDSixDQUFDLENBQUMsQ0FBQSIsIm5hbWVzIjpbXSwic291cmNlcyI6WyIvVXNlcnMvcWlkYW50YS9Eb2N1bWVudHMvcGVyc29uYWwvcmVtYXRjaC1vYnNlcnZhYmxlL3Rlc3QvcmVtYXRjaC1vYnNlcnZhYmxlLnRlc3QudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaW5pdCB9IGZyb20gJ0ByZW1hdGNoL2NvcmUnXG5pbXBvcnQgeyBtYXBUbyB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJ1xuaW1wb3J0IGNyZWF0ZVJlbWF0Y2hPYnNlcnZhYmxlLCB7IG9mVHlwZSB9IGZyb20gJy4uL3NyYydcbmltcG9ydCB7IHNoYXJrcywgZG9scGhpbnMsIGRlbGF5IH0gZnJvbSAnLi91dGlscydcblxuY29uc3Qgc2hhcmtFcGljcyA9IChcbiAgYWN0aW9uJCxcbiAgc3RhdGUkLFxuICB7IGRpc3BhdGNoZXJzIH0sXG4pID0+IHtcbiAgcmV0dXJuIGFjdGlvbiQucGlwZShcbiAgICBvZlR5cGUoZGlzcGF0Y2hlcnMuZG9scGhpbnMuaW5jcmVtZW50LCBkaXNwYXRjaGVycy5kb2xwaGlucy5pbmNyZW1lbnRBc3luYyksXG4gICAgbWFwVG8oZGlzcGF0Y2hlcnMuc2hhcmtzLmluY3JlbWVudCgxKSksXG4gIClcbn1cblxuY29uc3QgbW9kZWxzID0ge1xuICBzaGFya3MsXG4gIGRvbHBoaW5zLFxufVxuXG5cbmRlc2NyaWJlKCdyZW1hdGNoIG9ic2VydmFibGUnLCAoKSA9PiB7XG4gIHRlc3QoJ3JlbWF0Y2ggb2JzZXJ2YWJsZSBsaXN0ZW4gbm9ybWFsIGRpc3BhdGNoJywgKCkgPT4ge1xuICAgIGNvbnN0IHJlbWF0Y2hPYnNlcnZhYmxlID0gY3JlYXRlUmVtYXRjaE9ic2VydmFibGUoeyBlcGljczogeyBzaGFya0VwaWNzIH0sIG1vZGVscyB9KVxuICAgIGNvbnN0IHN0b3JlID0gaW5pdCh7XG4gICAgICBtb2RlbHMsXG4gICAgICBwbHVnaW5zOiBbcmVtYXRjaE9ic2VydmFibGVdLFxuICAgIH0pXG4gICAgc3RvcmUuZGlzcGF0Y2guZG9scGhpbnMuaW5jcmVtZW50KClcbiAgICBleHBlY3Qoc3RvcmUuZ2V0U3RhdGUoKSkudG9FcXVhbCh7XG4gICAgICBzaGFya3M6IDEsXG4gICAgICBkb2xwaGluczogMixcbiAgICB9KVxuICB9KVxuXG4gIHRlc3QoJ3JlbWF0Y2ggb2JzZXJ2YWJsZSBsaXN0ZW4gZWZmZWN0IGRpc3BhdGNoJywgYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IHJlbWF0Y2hPYnNlcnZhYmxlID0gY3JlYXRlUmVtYXRjaE9ic2VydmFibGUoeyBlcGljczogeyBzaGFya0VwaWNzIH0sIG1vZGVscyB9KVxuICAgIGNvbnN0IHN0b3JlID0gaW5pdCh7XG4gICAgICBtb2RlbHMsXG4gICAgICBwbHVnaW5zOiBbcmVtYXRjaE9ic2VydmFibGVdLFxuICAgIH0pXG4gICAgc3RvcmUuZGlzcGF0Y2guZG9scGhpbnMuaW5jcmVtZW50QXN5bmMoKVxuICAgIGF3YWl0IGRlbGF5KDEwMDApXG4gICAgZXhwZWN0KHN0b3JlLmdldFN0YXRlKCkpLnRvRXF1YWwoe1xuICAgICAgc2hhcmtzOiAxLFxuICAgICAgZG9scGhpbnM6IDIsXG4gICAgfSlcbiAgfSlcbn0pXG4iXSwidmVyc2lvbiI6M30=
